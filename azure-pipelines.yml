name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

variables:
- name: BuildParameters.RestoreBuildProjects
  value: '**/*.csproj'
- name: BuildParameters.TestProjects
  value: '**/Products.Tests.csproj'
- name: BuildConfiguration
  value: Release

trigger:
  branches:
    include:
    - master
    - main
    - release/*

pr:
 branches:
   exclude:
     - '*'

resources:
  repositories:
  - repository: self
    type: git
    ref: master

jobs:
- job: Job_1
  displayName: Agent job 1
  pool:
    name: Azure Pipelines
  steps:
  - checkout: self
  
  - task: UseDotNet@2
    displayName: Use .Net Core sdk 6.0.x
    inputs:
      version: 6.0.x
      
  - task: DotNetCoreCLI@2
    displayName: Publish web projects
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
      zipAfterPublish: true

  - task: DotNetCoreCLI@2
    displayName: Publish functions
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    inputs:
        command: publish
        publishWebProjects: False
        projects: '**/*.Functions.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
  
  - task: DotNetCoreCLI@2
    displayName: dotnet pack
    inputs:
      command: pack
      searchPatternPack: 'src/**/*.csproj'
      versioningScheme: byEnvVar
      versionEnvVar: 'GitVersion.SemVer'
  
  - task: NuGetCommand@2
    displayName: NuGet push
    inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'd3f77f23-18b0-4c7e-82f0-684647c813f7'
        allowPackageConflicts: true
...
